Prog. Program ::= [ Decl ] ;
separator Decl ";" ;

Def. Decl ::= Ident ":" Exp "=" [ Branch ]; separator Branch "";
Data. Decl ::= "data" Ident ":" "Type" "=" [ ConstrDef ]; separator ConstrDef "|";

Br. Branch ::= ">" [Exp] "->" Exp ;

Con. ConstrDef ::= Ident ":" Exp ;

Pi.  Exp ::= "(" Ident ":" Exp ")" "->" Exp ;
Arr. Exp ::= Exp1 "->" Exp;
Type. Exp2 ::= "Type";

Lam. Exp ::= "\\" Ident "." Exp;
App. Exp2 ::= Ident [Exp];
Id.  Exp3 ::= Ident;
(:[]). [Exp] ::= Exp3;
(:). [Exp] ::= Exp3 [Exp];

_. Exp ::= Exp1;
_. Exp1 ::= Exp2;
_. Exp2 ::= Exp3;
_. Exp3 ::= "(" Exp ")";
